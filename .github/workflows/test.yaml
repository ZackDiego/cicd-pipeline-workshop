# 指定 Actions 的名稱，會顯示在 Actions 頁面上
name: Lint & Test when PR with Cache

# 指定觸發的事件(trigger event)，這裡是 push 到 main 分支時觸發
on:
  pull_request:
    branches: main

# 指定工作流程(jobs)
# 每個 actions 至少要有一個 job
jobs:
  syntax-check:
    # 指定運行環境，可以多個
    runs-on: ubuntu-latest
    steps:
        - run: echo "This job was tirggered by a ${{ github.event_name }} event"

        - name: checkout-repository
          uses: actions/checkout@v4
        
        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '18'
    
        - name: Install dependencies
          run:  npm install

        - name: Cache Node.js and npm
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: ${{ runner.os }}-node-
        
        - name: Lint check
          run: ./node_modules/.bin/eslint .

        - name: Prettier check
          run: ./node_modules/.bin/prettier --write .

  test-code:
    runs-on: ubuntu-latest
    needs: syntax-check
    steps:
        - name: checkout-repository
          uses: actions/checkout@v4
      
        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '18'
  
        - name: Cache Node.js and its dependency
          id: cache-npm
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: ${{ runner.os }}-node-
        
        - name: Install dependencies if cache missed
          if: steps.cache-npm.outputs.cache-hit != 'true'
          run: npm install

        - name: Run Mocha tests with nyc and mochawesome
          run: |
            ./node_modules/.bin/nyc --reporter=html ./node_modules/.bin/mocha --reporter mochawesome

        - name: Upload mochawesome report
          uses: actions/upload-artifact@v4
          if: ${{ always() }}
          with:
            name: mochawesome-report
            path: ./mochawesome-report

        - name: Upload code coverage report
          uses: actions/upload-artifact@v4
          if: ${{ always() }}
          with:
            name: code-coverage-report
            path: ./coverage
    
  notify-discord:
    runs-on: ubuntu-latest
    needs: test-code
    if: failure()
    steps:
      - name: Get GitHub Action URL
        id: vars
        run: echo "::set-output name=run_url::https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    
      - name: Send Discord message on failure
        if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
            curl -X POST -H "Content-Type: application/json" -d '{
            "content": "Workflow ${{ github.workflow }} failed in job ${{ github.job }}.
            Check the reports [here](${{ steps.vars.outputs.run_url }})."
            }' $DISCORD_WEBHOOK_URL